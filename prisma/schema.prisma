// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  defaultShippingAddress Int?
  defaultBillingAddress Int?
  total     Int  @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  addresses Address[]
  cartItems CartItem[]
  orders    Order[]
  orderedItems OrderedItem[]
 paswordRequests PasswordRequest[]

  @@map("users")
}

model Address {
  id        Int      @id @default(autoincrement())
  lineOne   String
  lineTwo   String?
  city      String
  country   String
  pincode   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  description String @db.Text
  price Decimal
  tags String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItems CartItem[]
  orderedItems OrderedItem[]

  @@map("products")
}

model CartItem {
  id        Int @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product     @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart-items")
}

model Order {
  id        Int @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  order_id  String
  payment_id String
  status  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}

model OrderedItem {
  id        Int @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product     @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ordered-items")
}

model PasswordRequest {
  id        String @id
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  isActive  Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("password-requests")
}